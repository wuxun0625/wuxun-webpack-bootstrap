1.执行环境(execution context)
	每一个对象，每一个函数都拥有自己的执行环境，环境中定义的所有变量和函数都保存在变量对象(variable object)中，在函数中这个变量对象又叫活动对象(Activation object)。
2.作用域
	当代码在一个执行环境中运行时，会在变量对象中创建一个作用域链，作用域链的最前端永远是当前的执行环境的变量对象(活动对象)。
	当调用变量或函数时会从作用域链的最前端检索到最后端，找不到就报undefined错误。
3.闭包。
	指有权访问另一个函数作用域中的变量的函数。
	之所以能访问闭包函数的父函数作用域正是因为闭包函数的作用域链中包含了父函数的活动对象。
	即使父函数已经销毁，父函数的作用域链也销毁，但闭包函数的作用域链中依然保留着父函数的活动对象，所以父函数的活动对象依然保存在内存中，正是如此所以闭包函数可以继续访问父函数的变量。
	闭包函数的this通常指向全局对象